Worst case

1 * [done<-false] +
1 * [n <- 0] +
(numElements +1)*([n < numElements] + [done = false]) +
numElements * [done <- true] +
((numElements(numElements+1))/2) * (1 * [m <-] + 1 * [numElements - 1] + 1 * [> n] +
1 * [list[m]] + 1* [m-1] + 1 * [list[]] + 1 * [<] +
1 * [m-1] + 1 * [list[]] + 1 * [<-] +
1 * [tmp] + 1 * [m-1] + 1 * [list[]<-] +
1 * [done<-false] ) +
1 * [n+1] +
1 * [n<-] +
1 * return

set numElements = x

1 + 1 + (x + 1) * 2 + x + (x(x+1)/2) * ( 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
+ 1 + 1 + 1 + 1 + 1 + 1) + 1 + 1 + 1
2 + 2x + 2 + x + (1/2x^2 + 1/2x) * 14 + 3
3x + 6 + 7x^2 + 7x
7x^2 + 10x + 7

Best case

1 * [done<-false] +
1 * [n <- 0] +
2*([n < numElements] + [done = false]) +
1 * [done <- true] +

(numElements-1) * (1 * [m <-] + 1 * [numElements - 1] + 1 * [> n])

1 * [n+1] +
1 * [n<-]
1 * [return]

1 + 1 + 2*2 + 1 + (x-1) * (1 + 1 + 1) + 1 + 1 + 1

10 + 3x - 3

3x + 7 
